/**
 * @file Source code generated by PDL compiler.
 * @version 1.0
 * @sdkversion 5.0.302.607 (production_sdk#ffbfc5d.170130-1133)
 * @schemaversion 1.0.0.2
 */
/// <reference path="../../TypeReferences.d.ts" />
/// <amd-bundling root="true" />

import FxComposition = require ("Fx/Composition");
import FxSelectable2 = require ("Fx/Composition/Selectable");
export = BladeDefinitions;
module BladeDefinitions {
    var extensionName: string = "HubsExtension";
    function createOptions<TParameters, TOutputs>(onClosed: FxComposition.BladeClosedWithDataHandler<any>, parameters?: TParameters, callbacks?: FxSelectable2.PdlBladeCallbacks<TOutputs>): FxSelectable2.PdlBladeReferenceOptions<TParameters, TOutputs> {
        return {
                onClosed: onClosed,
                parameters: parameters,
                callbacks: callbacks
            };
    }
    export class UnauthorizedAssetBladeReference extends FxSelectable2.PdlBladeReference<void, void> {
        public constructor(onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("UnauthorizedAssetBlade", extensionName, createOptions<void, void>(onClosed, undefined), {
                    });
        }
    }
    export class NotFoundAssetBladeReference extends FxSelectable2.PdlBladeReference<void, void> {
        public constructor(onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("NotFoundAssetBlade", extensionName, createOptions<void, void>(onClosed, undefined), {
                    });
        }
    }
    export class UnavailableAssetBladeReference extends FxSelectable2.PdlBladeReference<void, void> {
        public constructor(onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("UnavailableAssetBlade", extensionName, createOptions<void, void>(onClosed, undefined), {
                    });
        }
    }
    export interface NoCreateFlowBladeInputs {
        marketplaceItemId: any;
    }
    export class NoCreateFlowBladeReference extends FxSelectable2.PdlBladeReference<NoCreateFlowBladeInputs, void> {
        public constructor(parameters: NoCreateFlowBladeInputs, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("NoCreateFlowBlade", extensionName, createOptions<NoCreateFlowBladeInputs, void>(onClosed, parameters), {
                    });
        }
    }
    export interface ResourcesInputs {
        resourceType?: any;
        selectedSubscriptionId?: any;
        filter?: any;
        scope?: any;
        kind?: any;
    }
    export class ResourcesReference extends FxSelectable2.PdlBladeReference<ResourcesInputs, void> {
        public constructor(parameters: ResourcesInputs, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("Resources", extensionName, createOptions<ResourcesInputs, void>(onClosed, parameters), {
                    });
        }
    }
    export interface BrowseAllResourcesBladeInputs {
        resourceType?: any;
        selectedSubscriptionId?: any;
        filter?: any;
        scope?: any;
        kind?: any;
    }
    export class BrowseAllResourcesBladeReference extends FxSelectable2.PdlBladeReference<BrowseAllResourcesBladeInputs, void> {
        public constructor(parameters: BrowseAllResourcesBladeInputs, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("BrowseAllResourcesBlade", extensionName, createOptions<BrowseAllResourcesBladeInputs, void>(onClosed, parameters), {
                    });
        }
    }
    export interface BrowseResourceBladeInputs {
        resourceType?: any;
        selectedSubscriptionId?: any;
        filter?: any;
        scope?: any;
        kind?: any;
    }
    export class BrowseResourceBladeReference extends FxSelectable2.PdlBladeReference<BrowseResourceBladeInputs, void> {
        public constructor(parameters: BrowseResourceBladeInputs, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("BrowseResourceBlade", extensionName, createOptions<BrowseResourceBladeInputs, void>(onClosed, parameters), {
                    });
        }
    }
    export interface BrowseInstanceLinkBladeInputs {
        resourceType?: any;
        selectedSubscriptionId?: any;
        filter?: any;
        scope?: any;
        kind?: any;
    }
    export class BrowseInstanceLinkBladeReference extends FxSelectable2.PdlBladeReference<BrowseInstanceLinkBladeInputs, void> {
        public constructor(parameters: BrowseInstanceLinkBladeInputs, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("BrowseInstanceLinkBlade", extensionName, createOptions<BrowseInstanceLinkBladeInputs, void>(onClosed, parameters), {
                    });
        }
    }
    export interface BrowseResourceGroupBladeInputs {
        resourceType?: any;
        selectedSubscriptionId?: any;
        filter?: any;
        scope?: any;
        kind?: any;
    }
    export class BrowseResourceGroupBladeReference extends FxSelectable2.PdlBladeReference<BrowseResourceGroupBladeInputs, void> {
        public constructor(parameters: BrowseResourceGroupBladeInputs, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("BrowseResourceGroupBlade", extensionName, createOptions<BrowseResourceGroupBladeInputs, void>(onClosed, parameters), {
                    });
        }
    }
    export interface MapResourceGroupBladeInputs {
        id: any;
    }
    export class MapResourceGroupBladeReference extends FxSelectable2.PdlBladeReference<MapResourceGroupBladeInputs, void> {
        public constructor(parameters: MapResourceGroupBladeInputs, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("MapResourceGroupBlade", extensionName, createOptions<MapResourceGroupBladeInputs, void>(onClosed, parameters), {
                    });
        }
    }
    export class ResourceGroupPickerV3BladeReference<TResult, TConfig> extends FxSelectable2.ParameterProviderBladeReference<void, TResult, TConfig> {
        public constructor(options: FxSelectable2.ParameterProviderOptions<void, TResult, TConfig>) {
            super("ResourceGroupPickerV3Blade", extensionName, options);
        }
    }
    export interface DeployFromTemplateBladeInputs {
        internal_bladeCallerParams: any;
    }
    export class DeployFromTemplateBladeReference<TResult, TConfig> extends FxSelectable2.ParameterProviderBladeReference<DeployFromTemplateBladeInputs, TResult, TConfig> {
        public constructor(options: FxSelectable2.ParameterProviderOptions<DeployFromTemplateBladeInputs, TResult, TConfig>) {
            super("DeployFromTemplateBlade", extensionName, options);
        }
    }
    export class ParametersEditorBladeReference<TResult, TConfig> extends FxSelectable2.ParameterProviderBladeReference<void, TResult, TConfig> {
        public constructor(options: FxSelectable2.ParameterProviderOptions<void, TResult, TConfig>) {
            super("ParametersEditorBlade", extensionName, options);
        }
    }
    export class TemplateEditorBladeReference<TResult, TConfig> extends FxSelectable2.ParameterProviderBladeReference<void, TResult, TConfig> {
        public constructor(options: FxSelectable2.ParameterProviderOptions<void, TResult, TConfig>) {
            super("TemplateEditorBlade", extensionName, options);
        }
    }
    export class LocationPickerV3BladeReference<TResult, TConfig> extends FxSelectable2.ParameterProviderBladeReference<void, TResult, TConfig> {
        public constructor(options: FxSelectable2.ParameterProviderOptions<void, TResult, TConfig>) {
            super("LocationPickerV3Blade", extensionName, options);
        }
    }
    export interface DeploymentDetailsBladeInputs {
        id: any;
        referrerInfo?: any;
    }
    export class DeploymentDetailsBladeReference extends FxSelectable2.PdlBladeReference<DeploymentDetailsBladeInputs, void> {
        public constructor(parameters: DeploymentDetailsBladeInputs, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("DeploymentDetailsBlade", extensionName, createOptions<DeploymentDetailsBladeInputs, void>(onClosed, parameters), {
                    });
        }
    }
    export interface ResourceGroupMapBladeInputs {
        id: any;
    }
    export class ResourceGroupMapBladeReference extends FxSelectable2.PdlBladeReference<ResourceGroupMapBladeInputs, void> {
        public constructor(parameters: ResourceGroupMapBladeInputs, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("ResourceGroupMapBlade", extensionName, createOptions<ResourceGroupMapBladeInputs, void>(onClosed, parameters), {
                    });
        }
    }
    export interface ResourceMenuBladeInputs {
        id: any;
        menuid?: any;
        referrerInfo?: any;
    }
    export class ResourceMenuBladeReference extends FxSelectable2.PdlBladeReference<ResourceMenuBladeInputs, void> {
        public constructor(parameters: ResourceMenuBladeInputs, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("ResourceMenuBlade", extensionName, createOptions<ResourceMenuBladeInputs, void>(onClosed, parameters), {
                    });
        }
    }
    export class ServicesHealthBladeReference extends FxSelectable2.PdlBladeReference<void, void> {
        public constructor(onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("ServicesHealthBlade", extensionName, createOptions<void, void>(onClosed, undefined), {
                    });
        }
    }
    export class SettingsBladeReference extends FxSelectable2.PdlBladeReference<void, void> {
        public constructor(onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("SettingsBlade", extensionName, createOptions<void, void>(onClosed, undefined), {
                    });
        }
    }
    export class SubscriptionPickerV3BladeReference<TResult, TConfig> extends FxSelectable2.ParameterProviderBladeReference<void, TResult, TConfig> {
        public constructor(options: FxSelectable2.ParameterProviderOptions<void, TResult, TConfig>) {
            super("SubscriptionPickerV3Blade", extensionName, options);
        }
    }
    export class DeployToAzureReference<TResult, TConfig> extends FxSelectable2.ParameterProviderBladeReference<void, TResult, TConfig> {
        public constructor(options: FxSelectable2.ParameterProviderOptions<void, TResult, TConfig>) {
            super("DeployToAzure", extensionName, options);
        }
    }
}
