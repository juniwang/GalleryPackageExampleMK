/**
 * @file Source code generated by PDL compiler.
 * @version 1.0
 * @sdkversion 5.0.302.607 (production_sdk#ffbfc5d.170130-1133)
 * @schemaversion 1.0.0.2
 */
/// <reference path="../../TypeReferences.d.ts" />
/// <amd-bundling root="true" />

import FxComposition = require ("Fx/Composition");
import FxSelectable2 = require ("Fx/Composition/Selectable");
export = BladeDefinitions;
module BladeDefinitions {
    var extensionName: string = "Microsoft_Azure_AD";
    function createOptions<TParameters, TOutputs>(onClosed: FxComposition.BladeClosedWithDataHandler<any>, parameters?: TParameters, callbacks?: FxSelectable2.PdlBladeCallbacks<TOutputs>): FxSelectable2.PdlBladeReferenceOptions<TParameters, TOutputs> {
        return {
                onClosed: onClosed,
                parameters: parameters,
                callbacks: callbacks
            };
    }
    export interface SelectMemberInputs {
        stepInput: any;
    }
    export interface SelectMemberOutputs {
        stepOutput?: any;
    }
    export class SelectMemberReference extends FxSelectable2.PdlBladeReference<SelectMemberInputs, SelectMemberOutputs> {
        public constructor(parameters: SelectMemberInputs, callbacks: FxSelectable2.PdlBladeCallbacks<SelectMemberOutputs>, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("SelectMember", extensionName, createOptions<SelectMemberInputs, SelectMemberOutputs>(onClosed, parameters, callbacks), {
                        outputParameters: [
                            "stepOutput"
                            ]
                    });
        }
    }
    export interface SelectMemberV3Inputs {
        title: any;
        subtitle: any;
    }
    export class SelectMemberV3Reference<TResult, TConfig> extends FxSelectable2.ParameterProviderBladeReference<SelectMemberV3Inputs, TResult, TConfig> {
        public constructor(options: FxSelectable2.ParameterProviderOptions<SelectMemberV3Inputs, TResult, TConfig>) {
            super("SelectMemberV3", extensionName, options);
        }
    }
    export interface RolesListBladeInputs {
        scope: any;
    }
    export class RolesListBladeReference extends FxSelectable2.PdlBladeReference<RolesListBladeInputs, void> {
        public constructor(parameters: RolesListBladeInputs, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("RolesListBlade", extensionName, createOptions<RolesListBladeInputs, void>(onClosed, parameters), {
                    });
        }
    }
    export interface UserAssignmentsBladeInputs {
        scope: any;
    }
    export class UserAssignmentsBladeReference extends FxSelectable2.PdlBladeReference<UserAssignmentsBladeInputs, void> {
        public constructor(parameters: UserAssignmentsBladeInputs, onClosed?: FxComposition.BladeClosedWithDataHandler<any>) {
            super("UserAssignmentsBlade", extensionName, createOptions<UserAssignmentsBladeInputs, void>(onClosed, parameters), {
                    });
        }
    }
}
